import tkinter as tk
from tkinter import filedialog as fd
from tkinter import ttk
import def_for_unloading as du

filename = ''
select_action = ['Выгрузка по НГЧ', 'Выгрузка по температурам', 'Выгрузка Бексаово, НГЧ14']
list_info_for_work = tuple()

"""
8 ЧекБоксов (8 НГЧ) 11 13 14 17 19 20 5 6

1) Выделение температур
2) Выгрузка по НГЧ (чекбоксы)
3) Выгрузка Бекасово, НГЧ14

"""
def open_file():

    global filename
    filename = str(fd.askopenfilenames())
    filename = filename.replace('/', '//').replace('(', '').replace(')', '').replace("'", '').replace(",", '')
    #print((filename))
    answer_file_name_entry.insert(0, filename)
    return filename





window = tk.Tk()
window.title('Сплав В.')
window.geometry('500x300')
window.resizable(False, False)

button_add_file = tk.Button(text='Выбрать файл', command=open_file, height=1)
button_add_file.place(x=25, y=50)

label_file_name = tk.Label(text="Выбранный файл: ", height=2)
label_file_name.place(x=130, y=25)
answer_file_name_entry = tk.Entry(width=50)
answer_file_name_entry.place(x=130, y=50)


# Выбор действия. Выгрузка:
# 1) по t
# 2) НГЧ (чекбоксы)
# 3) Бекасово, нгч14


combox = ttk.Combobox(values=select_action, width=25)
combox.current(0)
combox.place(x=25, y=85)

entry_ready_answer = tk.Entry(width=30)
entry_ready_answer.place(x=150, y=250)
def interface_for_temperature():
    global list_info_for_work

    # Лабель и ввод минимальных помещение
    label_get_min_tem_pom = tk.Label(text='Min t пом.: ')
    label_get_min_tem_pom.place(x=25, y=130)
    input_min_temp_pom = tk.Entry(width=15)
    input_min_temp_pom.place(x=130, y=130)
    input_min_temp_pom.insert(0, '15')

    # Лабель и ввод максимальных помещение
    label_get_max_tem_pom = tk.Label(text='Max t пом.: ')
    label_get_max_tem_pom.place(x=25, y=155)
    input_max_temp_pom = tk.Entry(width=15)
    input_max_temp_pom.place(x=130, y=155)
    input_max_temp_pom.insert(0, '20')

    label_get_min_temp_cont = tk.Label(text='Min t контура: ')
    label_get_min_temp_cont.place(x=250, y=130)
    input_min_temp_cont = tk.Entry(width=15)
    input_min_temp_cont.place(x=340, y=130)
    input_min_temp_cont.insert(0, '20')

    ## Лабель и ввод максимальных контур
    label_get_max_temp_cont = tk.Label(text='Max t контура: ')
    label_get_max_temp_cont.place(x=250, y=155)
    input_max_temp_cont = tk.Entry(width=15)
    input_max_temp_cont.place(x=340, y=155)
    input_max_temp_cont.insert(0, '25')

    list_info_for_work = (input_min_temp_pom, input_max_temp_pom, input_min_temp_cont, input_max_temp_cont)
    return list_info_for_work



def interface_for_NG4():
    global list_info_for_work
    list_info_for_work = dict(list_info_for_work)
    value_ng4_11 = tk.IntVar()
    ng4_11 = tk.Checkbutton(text='НГЧ 11', variable=value_ng4_11, offvalue=0, onvalue=1).place(x=25, y=120 )
    value_ng4_13 = tk.IntVar()
    ng4_13 = tk.Checkbutton(text='НГЧ 13', variable=value_ng4_13, offvalue=0, onvalue=1).place(x=25, y=140 )
    value_ng4_14 = tk.IntVar()
    ng4_14 = tk.Checkbutton(text='НГЧ 14', variable=value_ng4_14, offvalue=0, onvalue=1).place(x=25, y=160 )
    value_ng4_17 = tk.IntVar()
    ng4_17 = tk.Checkbutton(text='НГЧ 17', variable=value_ng4_17, offvalue=0, onvalue=1).place(x=25, y=180 )
    value_ng4_19 = tk.IntVar()
    ng4_19 = tk.Checkbutton(text='НГЧ 19', variable=value_ng4_19, offvalue=0, onvalue=1).place(x=130, y=120 )
    value_ng4_20 = tk.IntVar()
    ng4_20 = tk.Checkbutton(text='НГЧ 20', variable=value_ng4_20, offvalue=0, onvalue=1).place(x=130 , y=140 )
    value_ng4_5 = tk.IntVar()
    ng4_5 = tk.Checkbutton(text='НГЧ 5', variable=value_ng4_5, offvalue=0, onvalue=1).place(x=130 , y=160 )
    value_ng4_6 = tk.IntVar()
    ng4_6 = tk.Checkbutton(text='НГЧ 6', variable=value_ng4_6, offvalue=0, onvalue=1).place(x=130 , y=180 )
    list_info_for_work = {
                            'НГЧ-11': value_ng4_11,
                            'НГЧ-13': value_ng4_13,
                            'НГЧ-14': value_ng4_14,
                            'НГЧ-17': value_ng4_17,
                            'НГЧ-19': value_ng4_19,
                            'НГЧ-20': value_ng4_20,
                            'НГЧ-5': value_ng4_5,
                            'НГЧ-6': value_ng4_6
                          }

    return list_info_for_work

def get_interface():
    if combox.get() == select_action[1]:
        return interface_for_temperature()


    elif combox.get() == select_action[0]:
        return interface_for_NG4()




def lets_work():
    global filename
    global list_info_for_work
    print(list_info_for_work)
    if combox.get() == select_action[1]:

        min_pom = int(list_info_for_work[0].get())
        max_pom = int(list_info_for_work[1].get())
        min_cont = int(list_info_for_work[2].get())
        max_cont = int(list_info_for_work[3].get())
        answer_file_name = du.by_temperature(filename,
                          min_pom,
                          max_pom,
                          min_cont,
                          max_cont)

        return answer_file_name


    elif combox.get() == select_action[0]:

        answer_file_name = du.by_ng4(filename, list_info_for_work)

        return answer_file_name




button_select_action = ttk.Button(text='Выбрать', command=get_interface).place(x=250, y=85)


#entry_ready_answer.insert(0, f'{answer_file_name}')
do_it_button = tk.Button(text='Выполнить', command=lets_work)
do_it_button.place(x=25, y=250)


window.mainloop()
